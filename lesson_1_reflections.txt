How did viewing a diff between two versions of a file help you see the bug that was introduced?
easy to copare differences from working and non-working versions and find typo that led to bug.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
great to see evolution of the developemnt of the program,  Able to race back to when a feature, issue, function was added or changed and by whom.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
pro:  can comit at appropriate point
con: human error..forget.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Based on original function design/purpose of ssytem.  Google more foucessed on more independent officee=type docs (independent) git code where dependencies common.

How can you use the commands git log and git diff to view the history of files?
You can find a spefic change (if commented)
and then find wht the change was.

How might using version control make you more confident to make changes that could break something?
Insurance policy.  If you make mistake, always able to get back to where you started.

How can you use the staging area to make sure you have one commit per logical change?
even though many changes in working dir, you can filter thru staging/commit to betteer manage commits to logical changes.


